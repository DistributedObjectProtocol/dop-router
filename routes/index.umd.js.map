{"version":3,"file":"index.umd.js","sources":["../node_modules/route-parser/lib/route/compiled-grammar.js","../node_modules/route-parser/lib/route/nodes.js","../node_modules/route-parser/lib/route/parser.js","../node_modules/route-parser/lib/route/visitors/create_visitor.js","../node_modules/route-parser/lib/route/visitors/regexp.js","../node_modules/route-parser/lib/route/visitors/reverse.js","../node_modules/route-parser/lib/route.js","../src/routes/index.js"],"sourcesContent":["/* parser generated by jison 0.4.17 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,9],$V1=[1,10],$V2=[1,11],$V3=[1,12],$V4=[5,11,12,13,14,15];\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"root\":3,\"expressions\":4,\"EOF\":5,\"expression\":6,\"optional\":7,\"literal\":8,\"splat\":9,\"param\":10,\"(\":11,\")\":12,\"LITERAL\":13,\"SPLAT\":14,\"PARAM\":15,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",11:\"(\",12:\")\",13:\"LITERAL\",14:\"SPLAT\",15:\"PARAM\"},\nproductions_: [0,[3,2],[3,1],[4,2],[4,1],[6,1],[6,1],[6,1],[6,1],[7,3],[8,1],[9,1],[10,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\nreturn new yy.Root({},[$$[$0-1]])\nbreak;\ncase 2:\nreturn new yy.Root({},[new yy.Literal({value: ''})])\nbreak;\ncase 3:\nthis.$ = new yy.Concat({},[$$[$0-1],$$[$0]]);\nbreak;\ncase 4: case 5:\nthis.$ = $$[$0];\nbreak;\ncase 6:\nthis.$ = new yy.Literal({value: $$[$0]});\nbreak;\ncase 7:\nthis.$ = new yy.Splat({name: $$[$0]});\nbreak;\ncase 8:\nthis.$ = new yy.Param({name: $$[$0]});\nbreak;\ncase 9:\nthis.$ = new yy.Optional({},[$$[$0-1]]);\nbreak;\ncase 10:\nthis.$ = yytext;\nbreak;\ncase 11: case 12:\nthis.$ = yytext.slice(1);\nbreak;\n}\n},\ntable: [{3:1,4:2,5:[1,3],6:4,7:5,8:6,9:7,10:8,11:$V0,13:$V1,14:$V2,15:$V3},{1:[3]},{5:[1,13],6:14,7:5,8:6,9:7,10:8,11:$V0,13:$V1,14:$V2,15:$V3},{1:[2,2]},o($V4,[2,4]),o($V4,[2,5]),o($V4,[2,6]),o($V4,[2,7]),o($V4,[2,8]),{4:15,6:4,7:5,8:6,9:7,10:8,11:$V0,13:$V1,14:$V2,15:$V3},o($V4,[2,10]),o($V4,[2,11]),o($V4,[2,12]),{1:[2,1]},o($V4,[2,3]),{6:14,7:5,8:6,9:7,10:8,11:$V0,12:[1,16],13:$V1,14:$V2,15:$V3},o($V4,[2,9])],\ndefaultActions: {3:[2,2],13:[2,1]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        function _parseError (msg, hash) {\n            this.message = msg;\n            this.hash = hash;\n        }\n        _parseError.prototype = Error;\n\n        throw new _parseError(str, hash);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return \"(\";\nbreak;\ncase 1:return \")\";\nbreak;\ncase 2:return \"SPLAT\";\nbreak;\ncase 3:return \"PARAM\";\nbreak;\ncase 4:return \"LITERAL\";\nbreak;\ncase 5:return \"LITERAL\";\nbreak;\ncase 6:return \"EOF\";\nbreak;\n}\n},\nrules: [/^(?:\\()/,/^(?:\\))/,/^(?:\\*+\\w+)/,/^(?::+\\w+)/,/^(?:[\\w%\\-~\\n]+)/,/^(?:.)/,/^(?:$)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\n}","'use strict';\n/** @module route/nodes */\n\n\n/**\n * Create a node for use with the parser, giving it a constructor that takes\n * props, children, and returns an object with props, children, and a\n * displayName.\n * @param  {String} displayName The display name for the node\n * @return {{displayName: string, props: Object, children: Array}}\n */\nfunction createNode(displayName) {\n  return function(props, children) {\n    return {\n      displayName: displayName,\n      props: props,\n      children: children || []\n    };\n  };\n}\n\nmodule.exports = {\n  Root: createNode('Root'),\n  Concat: createNode('Concat'),\n  Literal: createNode('Literal'),\n  Splat: createNode('Splat'),\n  Param: createNode('Param'),\n  Optional: createNode('Optional')\n};\n","/**\n * @module route/parser\n */\n'use strict';\n\n/** Wrap the compiled parser with the context to create node objects */\nvar parser = require('./compiled-grammar').parser;\nparser.yy = require('./nodes');\nmodule.exports = parser;\n","'use strict';\n/**\n * @module route/visitors/create_visitor\n */\n\nvar nodeTypes = Object.keys(require('../nodes'));\n\n/**\n * Helper for creating visitors. Take an object of node name to handler\n * mappings, returns an object with a \"visit\" method that can be called\n * @param  {Object.<string,function(node,context)>} handlers A mapping of node\n * type to visitor functions\n * @return {{visit: function(node,context)}}  A visitor object with a \"visit\"\n * method that can be called on a node with a context\n */\nfunction createVisitor(handlers) {\n  nodeTypes.forEach(function(nodeType) {\n    if( typeof handlers[nodeType] === 'undefined') {\n      throw new Error('No handler defined for ' + nodeType.displayName);\n    }\n\n  });\n\n  return {\n    /**\n     * Call the given handler for this node type\n     * @param  {Object} node    the AST node\n     * @param  {Object} context context to pass through to handlers\n     * @return {Object}\n     */\n    visit: function(node, context) {\n      return this.handlers[node.displayName].call(this,node, context);\n    },\n    handlers: handlers\n  };\n}\n\nmodule.exports = createVisitor;","'use strict';\n\nvar createVisitor  = require('./create_visitor'),\n    escapeRegExp = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n/**\n * @class\n * @private\n */\nfunction Matcher(options) {\n  this.captures = options.captures;\n  this.re = options.re;\n}\n\n/**\n * Try matching a path against the generated regular expression\n * @param  {String} path The path to try to match\n * @return {Object|false}      matched parameters or false\n */\nMatcher.prototype.match = function (path) {\n  var match = this.re.exec(path),\n      matchParams = {};\n\n  if( !match ) {\n    return;\n  }\n\n  this.captures.forEach( function(capture, i) {\n    if( typeof match[i+1] === 'undefined' ) {\n      matchParams[capture] = undefined;\n    }\n    else {\n      matchParams[capture] = decodeURIComponent(match[i+1]);\n    }\n  });\n\n  return matchParams;\n};\n\n/**\n * Visitor for the AST to create a regular expression matcher\n * @class RegexpVisitor\n * @borrows Visitor-visit\n */\nvar RegexpVisitor = createVisitor({\n  'Concat': function(node) {\n    return node.children\n      .reduce(\n        function(memo, child) {\n          var childResult = this.visit(child);\n          return {\n            re: memo.re + childResult.re,\n            captures: memo.captures.concat(childResult.captures)\n          };\n        }.bind(this),\n        {re: '', captures: []}\n      );\n  },\n  'Literal': function(node) {\n    return {\n      re: node.props.value.replace(escapeRegExp, '\\\\$&'),\n      captures: []\n    };\n  },\n\n  'Splat': function(node) {\n    return {\n      re: '([^?]*?)',\n      captures: [node.props.name]\n    };\n  },\n\n  'Param': function(node) {\n    return {\n      re: '([^\\\\/\\\\?]+)',\n      captures: [node.props.name]\n    };\n  },\n\n  'Optional': function(node) {\n    var child = this.visit(node.children[0]);\n    return {\n      re: '(?:' + child.re + ')?',\n      captures: child.captures\n    };\n  },\n\n  'Root': function(node) {\n    var childResult = this.visit(node.children[0]);\n    return new Matcher({\n      re: new RegExp('^' + childResult.re + '(?=\\\\?|$)' ),\n      captures: childResult.captures\n    });\n  }\n});\n\nmodule.exports = RegexpVisitor;","'use strict';\n\nvar createVisitor  = require('./create_visitor');\n\n/**\n * Visitor for the AST to construct a path with filled in parameters\n * @class ReverseVisitor\n * @borrows Visitor-visit\n */\nvar ReverseVisitor = createVisitor({\n  'Concat': function(node, context) {\n    var childResults =  node.children\n      .map( function(child) {\n        return this.visit(child,context);\n      }.bind(this));\n\n    if( childResults.some(function(c) { return c === false; }) ) {\n      return false;\n    }\n    else {\n      return childResults.join('');\n    }\n  },\n\n  'Literal': function(node) {\n    return decodeURI(node.props.value);\n  },\n\n  'Splat': function(node, context) {\n    if( context[node.props.name] ) {\n      return context[node.props.name];\n    }\n    else {\n      return false;\n    }\n  },\n\n  'Param': function(node, context) {\n    if( context[node.props.name] ) {\n      return context[node.props.name];\n    }\n    else {\n      return false;\n    }\n  },\n\n  'Optional': function(node, context) {\n    var childResult = this.visit(node.children[0], context);\n    if( childResult ) {\n      return childResult;\n    }\n    else {\n      return '';\n    }\n  },\n\n  'Root': function(node, context) {\n    context = context || {};\n    var childResult = this.visit(node.children[0], context);\n    if( !childResult ) {\n      return false;\n    }\n    return encodeURI(childResult);\n  }\n});\n\nmodule.exports = ReverseVisitor;","'use strict';\nvar Parser = require('./route/parser'),\n    RegexpVisitor = require('./route/visitors/regexp'),\n    ReverseVisitor = require('./route/visitors/reverse');\n\nRoute.prototype = Object.create(null)\n\n/**\n * Match a path against this route, returning the matched parameters if\n * it matches, false if not.\n * @example\n * var route = new Route('/this/is/my/route')\n * route.match('/this/is/my/route') // -> {}\n * @example\n * var route = new Route('/:one/:two')\n * route.match('/foo/bar/') // -> {one: 'foo', two: 'bar'}\n * @param  {string} path the path to match this route against\n * @return {(Object.<string,string>|false)} A map of the matched route\n * parameters, or false if matching failed\n */\nRoute.prototype.match = function(path) {\n  var re = RegexpVisitor.visit(this.ast),\n      matched = re.match(path);\n\n  return matched ? matched : false;\n\n};\n\n/**\n * Reverse a route specification to a path, returning false if it can't be\n * fulfilled\n * @example\n * var route = new Route('/:one/:two')\n * route.reverse({one: 'foo', two: 'bar'}) -> '/foo/bar'\n * @param  {Object} params The parameters to fill in\n * @return {(String|false)} The filled in path\n */\nRoute.prototype.reverse = function(params) {\n  return ReverseVisitor.visit(this.ast, params);\n};\n\n/**\n * Represents a route\n * @example\n * var route = Route('/:foo/:bar');\n * @example\n * var route = Route('/:foo/:bar');\n * @param {string} spec -  the string specification of the route.\n *     use :param for single portion captures, *param for splat style captures,\n *     and () for optional route branches\n * @constructor\n */\nfunction Route(spec) {\n  var route;\n  if (this) {\n    // constructor called with new\n    route = this;\n  } else {\n    // constructor called as a function\n    route = Object.create(Route.prototype);\n  }\n  if( typeof spec === 'undefined' ) {\n    throw new Error('A route spec is required');\n  }\n  route.spec = spec;\n  route.ast = Parser.parse(spec);\n  return route;\n}\n\nmodule.exports = Route;","import Route from 'route-parser'\n\nexport function createRoute(path_user) {\n    const route = new Route(path_user)\n    const f = params => route.reverse(params)\n    f.match = route_built => route.match(getDefaultPathname(route_built))\n    return f\n}\n\nfunction getDefaultPathname(route) {\n    return typeof route != 'string' && typeof window != 'undefined'\n        ? window.location.href.slice(location.origin.length)\n        : route\n}\n\n// https://github.com/rcs/route-parser\n// https://github.com/snd/url-pattern\n// https://github.com/troch/path-parser\n"],"names":["parser","o","k","v","l","length","$V0","$V1","$V2","$V3","$V4","trace","yy","symbols_","error","root","expressions","EOF","expression","optional","literal","splat","param","(",")","LITERAL","SPLAT","PARAM","$accept","$end","terminals_","2","5","11","12","13","14","15","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","Root","Literal","value","this","$","Concat","Splat","name","Param","Optional","slice","table","3","4","6","7","8","9","10","1","defaultActions","parseError","str","hash","recoverable","_parseError","msg","message","prototype","Error","parse","input","self","stack","vstack","lstack","args","call","arguments","lexer","Object","create","sharedState","hasOwnProperty","setInput","yylloc","yyloc","push","ranges","options","getPrototypeOf","symbol","preErrorSymbol","state","action","r","p","len","newState","expected","lex","token","yyval","errStr","showPosition","join","text","match","line","loc","Array","first_line","last_line","first_column","last_column","range","apply","concat","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","n","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","INITIAL","inclusive","Parser","exports","createNode","displayName","props","children","require$$0","require$$1","nodeTypes","keys","handlers","forEach","nodeType","visit","node","context","escapeRegExp","Matcher","captures","re","path","exec","matchParams","capture","undefined","decodeURIComponent","createVisitor","reduce","memo","child","childResult","bind","RegExp","childResults","map","some","decodeURI","encodeURI","Route","spec","route","ast","RegexpVisitor","reverse","params","ReverseVisitor","path_user","f","route_built","window","location","href","origin","getDefaultPathname"],"mappings":"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"}