{"version":3,"file":"index.umd.js","sources":["../src/react/index.js"],"sourcesContent":["const sourceProperty = 'source'\nconst separatorChar = '-'\n\nexport function Router(props) {\n    let children = props.children\n    let childrens = Array.isArray(children) ? children : [children]\n    let source = props[sourceProperty]\n    for (let index = 0, total = childrens.length; index < total; ++index) {\n        children = childrens[index]\n        if (Check(children.props, source))\n            return getChildrenOfChildren(children)\n    }\n}\n\nexport function Route(props) {\n    let { children } = props\n    let source = props[sourceProperty]\n    if (Check(props, source)) return children\n}\n\nexport const Show = Route\n\n// export function setSourceProperty(name) {\n//     sourceProperty = name\n// }\n\n// export function setSeparatorChar(char) {\n//     separatorChar = char\n// }\n\nfunction getChildrenOfChildren(children) {\n    // react || preact\n    const child = children.props.children || children.children\n    return Array.isArray(child) ? child[0] : child //[0] // We can remove [0] when preact supports array of childrens. react16 already does\n}\n\nfunction Check(props, source) {\n    if (props.hasOwnProperty('if')) if (!props.if) return false\n\n    let prop\n    for (prop in props) {\n        if (prop !== 'children' && prop !== sourceProperty && prop !== 'if') {\n            let value = source.hasOwnProperty(prop)\n                ? source[prop]\n                : get(source, prop.split(separatorChar))\n\n            if (props[prop] instanceof RegExp) {\n                if (!props[prop].test(value)) return false\n            } else if (props[prop] !== value) return false\n        }\n    }\n\n    return true\n}\n\nfunction get(object, path) {\n    if (path.length === 0) return object\n\n    for (\n        let index = 0, total = path.length, tmpobject;\n        index < total;\n        index++\n    ) {\n        tmpobject = object[path[index]]\n\n        if (\n            index + 1 < total &&\n            tmpobject !== null &&\n            typeof tmpobject == 'object'\n        )\n            object = tmpobject\n        else if (object.hasOwnProperty(path[index])) return tmpobject\n        else return undefined\n    }\n\n    return object[path[index]]\n}\n"],"names":["sourceProperty","separatorChar","Route","props","children","Check","Show","getChildrenOfChildren","child","Array","isArray","source","hasOwnProperty","if","prop","value","get","split","RegExp","test","object","path","length","tmpobject","index","total","childrens"],"mappings":"kMAAA,MAAMA,EAAiB,SACjBC,EAAgB,IAatB,SAAgBC,EAAMC,GAClB,IAAIC,SAAEA,GAAaD,EAEnB,GAAIE,EAAMF,EADGA,EAAMH,IACO,OAAOI,EAGrC,MAAaE,EAAOJ,EAUpB,SAASK,EAAsBH,GAE3B,MAAMI,EAAQJ,EAASD,MAAMC,UAAYA,EAASA,SAClD,OAAOK,MAAMC,QAAQF,GAASA,EAAM,GAAKA,EAG7C,SAASH,EAAMF,EAAOQ,GAClB,GAAIR,EAAMS,eAAe,QAAYT,EAAMU,GAAI,OAAO,EAEtD,IAAIC,EACJ,IAAKA,KAAQX,EACT,GAAa,aAATW,GAAuBA,IAASd,GAA2B,OAATc,EAAe,CACjE,IAAIC,EAAQJ,EAAOC,eAAeE,GAC5BH,EAAOG,GACPE,EAAIL,EAAQG,EAAKG,MAAMhB,IAE7B,GAAIE,EAAMW,aAAiBI,QACvB,IAAKf,EAAMW,GAAMK,KAAKJ,GAAQ,OAAO,OAClC,GAAIZ,EAAMW,KAAUC,EAAO,OAAO,EAIjD,OAAO,EAGX,SAASC,EAAII,EAAQC,GACjB,GAAoB,IAAhBA,EAAKC,OAAc,OAAOF,EAE9B,IACI,IAAoCG,EAAhCC,EAAQ,EAAGC,EAAQJ,EAAKC,OAC5BE,EAAQC,EACRD,IACF,CAGE,GAFAD,EAAYH,EAAOC,EAAKG,MAGpBA,EAAQ,EAAIC,GACE,OAAdF,GACoB,iBAAbA,GAGN,OAAIH,EAAOR,eAAeS,EAAKG,IAAgBD,OAC/C,EAFDH,EAASG,EAKjB,OAAOH,EAAOC,EAAKG,iBAxEvB,SAAuBrB,GACnB,IAAIC,EAAWD,EAAMC,SACjBsB,EAAYjB,MAAMC,QAAQN,GAAYA,GAAYA,GAClDO,EAASR,EAAMH,GACnB,IAAK,IAAIwB,EAAQ,EAAGC,EAAQC,EAAUJ,OAAQE,EAAQC,IAASD,EAE3D,GAAInB,GADJD,EAAWsB,EAAUF,IACFrB,MAAOQ,GACtB,OAAOJ,EAAsBH"}